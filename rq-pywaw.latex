\documentclass{beamer}

\mode<presentation> {
    \usetheme{Madrid}
}

\usepackage{graphicx}
\usepackage{booktabs}
\usepackage[utf8]{inputenc}

% For pygmentize
\usepackage{fancyvrb}
\usepackage{color}

\input{styles}

%----------------------------------------------------------------------------------------
%	TITLE PAGE
%----------------------------------------------------------------------------------------

\title{Queuing tasks with RQ}

\author{Szymon Py≈ºalski}
\institute[Allegro Group]
{
Allegro Group \\
\medskip
\textit{szymon@pythonista.net}
}
\date{\today}

\begin{document}

\begin{frame}
\titlepage
\end{frame}

\begin{frame}
\frametitle{Contents}
\tableofcontents
\end{frame}

\begin{frame}
\frametitle{RQ - simple queues in Python}
    \begin{figure}
    \includegraphics[height=\textheight]{queue}
    \end{figure}
\end{frame}

\section{About rq}
\frame{\sectionpage}
\subsection{What's cool}
\frame{\subsectionpage}

\begin{frame}
\frametitle{Simple to set up}
        \pause
\begin{itemize}
    \item Install redis
        \pause
    \item Start your workers
\end{itemize}
        \pause
\input{starting}
\end{frame}


\begin{frame}
\frametitle{Simple to use}
\pause
\input{queueing1}
\pause
\input{queueing2}
\end{frame}

\begin{frame}
\frametitle{Simple to communicate}
\input{metadata}
\end{frame}

\begin{frame}
\frametitle{Simple to monitor}
\input{dashboard}
\end{frame}

\begin{frame}
\frametitle{RQ - simple queues in Python}
    \begin{figure}
    \includegraphics[height=\textheight]{rqdashboard}
    \end{figure}
\end{frame}



\begin{frame}
\frametitle{Simple to debug}
\centerline{Workers are OK with pdb}
\end{frame}

\subsection{What's problematic}
\frame{\subsectionpage}

\begin{frame}
    \frametitle{Pickle based}
    \begin{figure}
    \includegraphics[height=\textheight]{pickle1}
    \end{figure}
\end{frame}

\begin{frame}
    \frametitle{Pickle based}
    \begin{figure}
    \includegraphics[height=\textheight]{pickle2}
    \end{figure}
\end{frame}

\begin{frame}
    \frametitle{Pickle based}
    \begin{itemize}
            \pause
        \item You can use only picklable arguments
            \pause
        \item ...and you can't pickle django requests
            \pause
        \item ...which means you can't simply queue views
    \end{itemize}
\end{frame}

\begin{frame}
    \frametitle{Reimporting functions}
    \begin{itemize}
            \pause
        \item RQ stores the path to the job function
            \pause
        \item The worker reimports the function
            \pause
        \item ...so you can't queue methods
    \end{itemize}
\end{frame}

\begin{frame}
    \frametitle{Signal-based control}
    \begin{itemize}
            \pause
        \item Signals are used to time-out the workers
            \pause
        \item Signals are handled as exceptions
            \pause
        \item This can result in a problem when...
    \end{itemize}
\end{frame}

\begin{frame}
    \frametitle{Gotta catch 'em all}
    \begin{figure}
    \includegraphics[height=\textheight]{pikachu}
    \end{figure}
\end{frame}

\begin{frame}
    \frametitle{Gotta catch 'em all}
    \include{pokemon}
\end{frame}

\section{RQ in ralph}
\frame{\sectionpage}
\subsection{Why we needed it}
\frame{\subsectionpage}

\begin{frame}
    \frametitle{What is ralph?}
    \begin{itemize}
            \pause
    \item Reliable database of physical assets
            \pause
    \item Hardware scanning - 30 plugins
            \pause
    \item Service-oriented pricing
    \end{itemize}
\end{frame}

\begin{frame}
    \frametitle{Our problem}
    \begin{itemize}
            \pause
    \item Web requests that take more than http timeout
            \pause
    \item Huge automated tasks
            \pause
    \item ...that are splittable in a natural way
            \pause
    \item Things running in separated datacenters
    \end{itemize}
\end{frame}
\subsection{Our solutions}
\frame{\subsectionpage}
\begin{frame}
    \frametitle{Delegation}
    \begin{figure}
    \includegraphics[height=\textheight]{otto}
    \end{figure}
\end{frame}
\begin{frame}
    \frametitle{Scan}
    \begin{itemize}
        \pause
    \item Per-environment queues
        \pause
    \item Long storage of the results
    \end{itemize}
\end{frame}

\begin{frame}
    \frametitle{Reports}
    \begin{itemize}
        \pause
    \item Simple framework
        \pause
    \item Tasks as pseudo-views
        \pause
    \item Using \Verb|job.meta| to generate ETA/progress-bar
    \end{itemize}
\end{frame}

\begin{frame}
    \frametitle{Picklable request}
    \include{prequest}
\end{frame}

\begin{frame}
    \frametitle{Recreating the view}
    \include{getresult}
\end{frame}

\begin{frame}
    \frametitle{Generating results}
    \include{resultgen}
\end{frame}

\begin{frame}
    \frametitle{Generating response}
    \include{responsegen}
\end{frame}

%------------------------------------------------

\begin{frame}
\Huge{\centerline{Questions?}}
\end{frame}

%----------------------------------------------------------------------------------------

\end{document} 
